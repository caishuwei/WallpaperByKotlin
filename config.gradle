//定义ext对象，里面用于存储常用的配置
// 在Project build.gradle中通过apply from: "config.gradle"进行引用
// 在Project settings.gradle中配置的子模块，可以在模块的build.gradle通过rootProject.ext取得这个对象实例
ext {

    kotlin = [
            /**
             * kotlin项目构建插件
             */
            classpath_KotlinGradlePlugin     : "org.jetbrains.kotlin:kotlin-gradle-plugin:1.2.51",
            /**
             * kotlin Android扩展库，支持导入布局文件，通过id直接使用对应的View
             */
            classpath_KotlinAndroidExtensions: "org.jetbrains.kotlin:kotlin-android-extensions:1.2.51",
            /**
             * kotlin标准库，提供kotlin集合映射等java类的封装
             */
            kotlin_stdlib_jdk8               : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.2.51",
    ]

    //定义一个叫android的map，存储android版本
    android = [
            compileSdkVersion: 28,
            buildToolsVersion: "28.0.2",
            minSdkVersion    : 15,
            targetSdkVersion : 28,
    ]

    //android support包至28.0.0开始不再更新，现改用androidX包
    androidX = [
            appcompat   : "androidx.appcompat:appcompat:1.0.0",
            annotations : "androidx.annotation:annotation:1.0.0",
            material    : "com.google.android.material:material:1.0.0",
            drawerlayout: "androidx.drawerlayout:drawerlayout:1.0.0",
            recyclerview: "androidx.recyclerview:recyclerview:1.0.0",
            viewpager   : "androidx.viewpager:viewpager:1.0.0",
            /**
             * viewpager2 google新推出的ViewPager，支持从右到左布局，支持垂直方向
             */
            viewpager2  : "androidx.viewpager2:viewpager2:1.0.0-alpha02",
            cardview    : "androidx.cardview:cardview:1.0.0",
            /**
             * 分包支持，用于解决android 64k方法数限制
             * 需在module build.gradle中开启分包：multiDexEnabled true
             * 并在Application.attachBaseContext方法中调用MultiDex.install(this);
             */
            multidex    : "androidx.multidex:multidex:2.0.0",
    ]

    others = [
            /**
             * https://github.com/bumptech/glide
             * gilde异步图片加载库，包含常用的占位图，圆形裁减，高斯模糊等功能
             * 调用时传入Activity或者Fragment实例可以实现只在界面生命周期中加载图片（更高效）
             * 可以自定义输入流转换成内存对象（Bitmap ,Drawable,SVG等等），以及sd卡缓存与内存对象的转换，相当强大
             */
            glide                        : "com.github.bumptech.glide:glide:4.9.0",
            glide_compiler               : "com.github.bumptech.glide:compiler:4.9.0",

            /**
             * https://github.com/CymChad/BaseRecyclerViewAdapterHelper
             * RecyclerViewAdapter封装库，可以快速实现多级列表，多种类Item，Item拖拽与滑动删除等
             * 项目位于jitpack依赖库，需要在project build.gradle 添加 maven { url "https://jitpack.io" }*/
            BaseRecyclerViewAdapterHelper: "com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.31",

            /**
             * 网络请求框架 基于okhttp实现，特色在于可以将后台接口映射为java接口
             * 通过框架实例化接口可以进行api调用
             */
            retrofit                     : "com.squareup.retrofit2:retrofit:2.4.0",
            //retrofit接口调用直接返回json对象（这个包已经依赖了gson用于json解析）
            converter_gson               : "com.squareup.retrofit2:converter-gson:2.3.0",
            //让retrofit接口调用支持返回字符串对象
            converter_scalars            : "com.squareup.retrofit2:converter-scalars:2.3.0",
            //okhttp 3 日志拦截器
            logging_interceptor          : "com.squareup.okhttp3:logging-interceptor:3.9.0",
            /**
             * RxJava2，一个任务调度框架
             * 例如用于任务不同阶段切换不同线程，多任务合并或拆分
             * 最大特色在于其链式调用减少多层代码块，在任务过程中需要添加新的环节时秩序在中间插入即可
             */
            rxjava                       : "io.reactivex.rxjava2:rxjava:2.2.0",
            // rxjava是一个通用java包，任何做java开发的都可以用，rxandroid包含了Android中特有的东西，
            // 比如任务切换到MainThread执行
            rxandroid                    : "io.reactivex.rxjava2:rxandroid:2.0.1",
            /**
             * 让retrofit网络请求支持返回RxJava的任务封装对象
             * 作用在于可以接着在拿到网络数据后做后续处理（如子线程解压解密数据）再回调
             */
            retrofit2_rxjava2_adapter    : "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0",

            /**
             * https://github.com/JakeWharton/butterknife
             * 一个通过注解绑定View与View事件的框架
             * 可以减少界面初始化时的大量的findViewById
             * 在Fragment中使用可以节省很多onDestroyView时解除View引用的操作
             *
             * 使用这个框架需要对项目做一些配置，详情看网页
             * 使用该包的模块需要启用插件
             * apply plugin: 'com.jakewharton.butterknife'
             */
            butterknife                  : "com.jakewharton:butterknife:10.1.0",
            //用于注解编译时转java代码（annotationProcessor）
            butterknife_compiler         : "com.jakewharton:butterknife-compiler:10.1.0",
            classpath_Butterknife        : "com.jakewharton:butterknife-gradle-plugin:10.1.0",

            /**
             * 一个辅助实现mvp项目结构的sdk
             */
            dagger                       : "com.google.dagger:dagger:2.15",
            //annotationProcessor
            dagger_compiler              : "com.google.dagger:dagger-compiler:2.15",
            //compileOnly
            jsr250_api                   : 'javax.annotation:jsr250-api:1.0',

            //基于RxJava框架的动态权限申请
            rxpermissions                : "com.tbruyelle.rxpermissions2:rxpermissions:0.9.5@aar",

            //https://github.com/scwang90/SmartRefreshLayout
            //下拉刷新和上拉加载更多框架，目前网上用的比较多，很强大的框架，支持自定义
            SmartRefreshLayout           : "com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-andx-4",

            //https://github.com/comScore/ComScore-Android
            //app界面统计
            comscore                     : "com.comscore:android-analytics:5.+",

            /**
             * 数据库
             * 使用该包的模块需要启用插件
             * apply plugin: 'org.greenrobot.greendao'
             */
            greenDao                     : "org.greenrobot:greendao:3.2.2",
            greenDao_generator           : "org.greenrobot:greendao-generator:3.2.2",
            classpath_GreenDao           : 'org.greenrobot:greendao-gradle-plugin:3.2.2',

            //下载库
            aria                         : "com.arialyy.aria:aria-core:3.4.8",
            aria_compiler                : "com.arialyy.aria:aria-compiler:3.4.8",

            //zip解压
            zip4j                        : "net.lingala.zip4j:zip4j:1.3.2",

            //本地大图加载框架，不会直接加载一整张图片，而是根据屏幕显示的区域对图片进行分块加载
            largeImageView               : "com.shizhefei:LargeImageView:1.1.0",

    ]
}